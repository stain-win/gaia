// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.29.3
// source: gaia-client.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Secret struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Secret) Reset() {
	*x = Secret{}
	mi := &file_gaia_client_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Secret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secret) ProtoMessage() {}

func (x *Secret) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_client_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secret.ProtoReflect.Descriptor instead.
func (*Secret) Descriptor() ([]byte, []int) {
	return file_gaia_client_proto_rawDescGZIP(), []int{0}
}

func (x *Secret) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Secret) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// A Namespace contains a collection of secrets.
type Namespace struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Secrets       []*Secret              `protobuf:"bytes,2,rep,name=secrets,proto3" json:"secrets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Namespace) Reset() {
	*x = Namespace{}
	mi := &file_gaia_client_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Namespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Namespace) ProtoMessage() {}

func (x *Namespace) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_client_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Namespace.ProtoReflect.Descriptor instead.
func (*Namespace) Descriptor() ([]byte, []int) {
	return file_gaia_client_proto_rawDescGZIP(), []int{1}
}

func (x *Namespace) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Namespace) GetSecrets() []*Secret {
	if x != nil {
		return x.Secrets
	}
	return nil
}

type GetSecretRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"` // Namespace to which the secret belongs
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSecretRequest) Reset() {
	*x = GetSecretRequest{}
	mi := &file_gaia_client_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSecretRequest) ProtoMessage() {}

func (x *GetSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_client_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSecretRequest.ProtoReflect.Descriptor instead.
func (*GetSecretRequest) Descriptor() ([]byte, []int) {
	return file_gaia_client_proto_rawDescGZIP(), []int{2}
}

func (x *GetSecretRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetSecretRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type StatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	mi := &file_gaia_client_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_client_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_gaia_client_proto_rawDescGZIP(), []int{3}
}

func (x *StatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type NamespaceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespaces    []string               `protobuf:"bytes,1,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NamespaceResponse) Reset() {
	*x = NamespaceResponse{}
	mi := &file_gaia_client_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NamespaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceResponse) ProtoMessage() {}

func (x *NamespaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_client_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceResponse.ProtoReflect.Descriptor instead.
func (*NamespaceResponse) Descriptor() ([]byte, []int) {
	return file_gaia_client_proto_rawDescGZIP(), []int{4}
}

func (x *NamespaceResponse) GetNamespaces() []string {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

// Request for getting secrets from the common area.
type GetCommonSecretsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If provided, returns secrets only for this namespace.
	// If omitted, returns secrets for all namespaces in the common area.
	Namespace     *string `protobuf:"bytes,1,opt,name=namespace,proto3,oneof" json:"namespace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommonSecretsRequest) Reset() {
	*x = GetCommonSecretsRequest{}
	mi := &file_gaia_client_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommonSecretsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommonSecretsRequest) ProtoMessage() {}

func (x *GetCommonSecretsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_client_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommonSecretsRequest.ProtoReflect.Descriptor instead.
func (*GetCommonSecretsRequest) Descriptor() ([]byte, []int) {
	return file_gaia_client_proto_rawDescGZIP(), []int{5}
}

func (x *GetCommonSecretsRequest) GetNamespace() string {
	if x != nil && x.Namespace != nil {
		return *x.Namespace
	}
	return ""
}

// Response containing secrets from the common area, grouped by namespace.
type GetCommonSecretsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespaces    []*Namespace           `protobuf:"bytes,1,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommonSecretsResponse) Reset() {
	*x = GetCommonSecretsResponse{}
	mi := &file_gaia_client_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommonSecretsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommonSecretsResponse) ProtoMessage() {}

func (x *GetCommonSecretsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_client_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommonSecretsResponse.ProtoReflect.Descriptor instead.
func (*GetCommonSecretsResponse) Descriptor() ([]byte, []int) {
	return file_gaia_client_proto_rawDescGZIP(), []int{6}
}

func (x *GetCommonSecretsResponse) GetNamespaces() []*Namespace {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

var File_gaia_client_proto protoreflect.FileDescriptor

const file_gaia_client_proto_rawDesc = "" +
	"\n" +
	"\x11gaia-client.proto\x12\x04gaia\x1a\x1bgoogle/protobuf/empty.proto\".\n" +
	"\x06Secret\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"G\n" +
	"\tNamespace\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12&\n" +
	"\asecrets\x18\x02 \x03(\v2\f.gaia.SecretR\asecrets\"@\n" +
	"\x10GetSecretRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"(\n" +
	"\x0eStatusResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\"3\n" +
	"\x11NamespaceResponse\x12\x1e\n" +
	"\n" +
	"namespaces\x18\x01 \x03(\tR\n" +
	"namespaces\"J\n" +
	"\x17GetCommonSecretsRequest\x12!\n" +
	"\tnamespace\x18\x01 \x01(\tH\x00R\tnamespace\x88\x01\x01B\f\n" +
	"\n" +
	"_namespace\"K\n" +
	"\x18GetCommonSecretsResponse\x12/\n" +
	"\n" +
	"namespaces\x18\x01 \x03(\v2\x0f.gaia.NamespaceR\n" +
	"namespaces2\x8f\x02\n" +
	"\n" +
	"GaiaClient\x121\n" +
	"\tGetSecret\x12\x16.gaia.GetSecretRequest\x1a\f.gaia.Secret\x129\n" +
	"\tGetStatus\x12\x16.google.protobuf.Empty\x1a\x14.gaia.StatusResponse\x12@\n" +
	"\rGetNamespaces\x12\x16.google.protobuf.Empty\x1a\x17.gaia.NamespaceResponse\x12Q\n" +
	"\x10GetCommonSecrets\x12\x1d.gaia.GetCommonSecretsRequest\x1a\x1e.gaia.GetCommonSecretsResponseB)Z'github.com/stain-win/gaia/libs/go/protob\x06proto3"

var (
	file_gaia_client_proto_rawDescOnce sync.Once
	file_gaia_client_proto_rawDescData []byte
)

func file_gaia_client_proto_rawDescGZIP() []byte {
	file_gaia_client_proto_rawDescOnce.Do(func() {
		file_gaia_client_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_gaia_client_proto_rawDesc), len(file_gaia_client_proto_rawDesc)))
	})
	return file_gaia_client_proto_rawDescData
}

var file_gaia_client_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_gaia_client_proto_goTypes = []any{
	(*Secret)(nil),                   // 0: gaia.Secret
	(*Namespace)(nil),                // 1: gaia.Namespace
	(*GetSecretRequest)(nil),         // 2: gaia.GetSecretRequest
	(*StatusResponse)(nil),           // 3: gaia.StatusResponse
	(*NamespaceResponse)(nil),        // 4: gaia.NamespaceResponse
	(*GetCommonSecretsRequest)(nil),  // 5: gaia.GetCommonSecretsRequest
	(*GetCommonSecretsResponse)(nil), // 6: gaia.GetCommonSecretsResponse
	(*emptypb.Empty)(nil),            // 7: google.protobuf.Empty
}
var file_gaia_client_proto_depIdxs = []int32{
	0, // 0: gaia.Namespace.secrets:type_name -> gaia.Secret
	1, // 1: gaia.GetCommonSecretsResponse.namespaces:type_name -> gaia.Namespace
	2, // 2: gaia.GaiaClient.GetSecret:input_type -> gaia.GetSecretRequest
	7, // 3: gaia.GaiaClient.GetStatus:input_type -> google.protobuf.Empty
	7, // 4: gaia.GaiaClient.GetNamespaces:input_type -> google.protobuf.Empty
	5, // 5: gaia.GaiaClient.GetCommonSecrets:input_type -> gaia.GetCommonSecretsRequest
	0, // 6: gaia.GaiaClient.GetSecret:output_type -> gaia.Secret
	3, // 7: gaia.GaiaClient.GetStatus:output_type -> gaia.StatusResponse
	4, // 8: gaia.GaiaClient.GetNamespaces:output_type -> gaia.NamespaceResponse
	6, // 9: gaia.GaiaClient.GetCommonSecrets:output_type -> gaia.GetCommonSecretsResponse
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_gaia_client_proto_init() }
func file_gaia_client_proto_init() {
	if File_gaia_client_proto != nil {
		return
	}
	file_gaia_client_proto_msgTypes[5].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gaia_client_proto_rawDesc), len(file_gaia_client_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gaia_client_proto_goTypes,
		DependencyIndexes: file_gaia_client_proto_depIdxs,
		MessageInfos:      file_gaia_client_proto_msgTypes,
	}.Build()
	File_gaia_client_proto = out.File
	file_gaia_client_proto_goTypes = nil
	file_gaia_client_proto_depIdxs = nil
}
