// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.29.3
// source: gaia.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Secret struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Secret) Reset() {
	*x = Secret{}
	mi := &file_gaia_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Secret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secret) ProtoMessage() {}

func (x *Secret) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secret.ProtoReflect.Descriptor instead.
func (*Secret) Descriptor() ([]byte, []int) {
	return file_gaia_proto_rawDescGZIP(), []int{0}
}

func (x *Secret) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Secret) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Namespace struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Secrets       []*Secret              `protobuf:"bytes,2,rep,name=secrets,proto3" json:"secrets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Namespace) Reset() {
	*x = Namespace{}
	mi := &file_gaia_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Namespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Namespace) ProtoMessage() {}

func (x *Namespace) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Namespace.ProtoReflect.Descriptor instead.
func (*Namespace) Descriptor() ([]byte, []int) {
	return file_gaia_proto_rawDescGZIP(), []int{1}
}

func (x *Namespace) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Namespace) GetSecrets() []*Secret {
	if x != nil {
		return x.Secrets
	}
	return nil
}

type AddSecretRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Value         string                 `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	ClientName    string                 `protobuf:"bytes,4,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"` // Add this field for the admin
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddSecretRequest) Reset() {
	*x = AddSecretRequest{}
	mi := &file_gaia_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSecretRequest) ProtoMessage() {}

func (x *AddSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSecretRequest.ProtoReflect.Descriptor instead.
func (*AddSecretRequest) Descriptor() ([]byte, []int) {
	return file_gaia_proto_rawDescGZIP(), []int{2}
}

func (x *AddSecretRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *AddSecretRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddSecretRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *AddSecretRequest) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

type AddSecretResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddSecretResponse) Reset() {
	*x = AddSecretResponse{}
	mi := &file_gaia_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddSecretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSecretResponse) ProtoMessage() {}

func (x *AddSecretResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSecretResponse.ProtoReflect.Descriptor instead.
func (*AddSecretResponse) Descriptor() ([]byte, []int) {
	return file_gaia_proto_rawDescGZIP(), []int{3}
}

func (x *AddSecretResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AddSecretResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RevokeCertRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CertId        string                 `protobuf:"bytes,1,opt,name=cert_id,json=certId,proto3" json:"cert_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevokeCertRequest) Reset() {
	*x = RevokeCertRequest{}
	mi := &file_gaia_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeCertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeCertRequest) ProtoMessage() {}

func (x *RevokeCertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeCertRequest.ProtoReflect.Descriptor instead.
func (*RevokeCertRequest) Descriptor() ([]byte, []int) {
	return file_gaia_proto_rawDescGZIP(), []int{4}
}

func (x *RevokeCertRequest) GetCertId() string {
	if x != nil {
		return x.CertId
	}
	return ""
}

type RevokeCertResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevokeCertResponse) Reset() {
	*x = RevokeCertResponse{}
	mi := &file_gaia_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeCertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeCertResponse) ProtoMessage() {}

func (x *RevokeCertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeCertResponse.ProtoReflect.Descriptor instead.
func (*RevokeCertResponse) Descriptor() ([]byte, []int) {
	return file_gaia_proto_rawDescGZIP(), []int{5}
}

func (x *RevokeCertResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetSecretRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"` // Change from just 'id'
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSecretRequest) Reset() {
	*x = GetSecretRequest{}
	mi := &file_gaia_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSecretRequest) ProtoMessage() {}

func (x *GetSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSecretRequest.ProtoReflect.Descriptor instead.
func (*GetSecretRequest) Descriptor() ([]byte, []int) {
	return file_gaia_proto_rawDescGZIP(), []int{6}
}

func (x *GetSecretRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetSecretRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStatusRequest) Reset() {
	*x = GetStatusRequest{}
	mi := &file_gaia_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusRequest) ProtoMessage() {}

func (x *GetStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusRequest.ProtoReflect.Descriptor instead.
func (*GetStatusRequest) Descriptor() ([]byte, []int) {
	return file_gaia_proto_rawDescGZIP(), []int{7}
}

type GetStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStatusResponse) Reset() {
	*x = GetStatusResponse{}
	mi := &file_gaia_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusResponse) ProtoMessage() {}

func (x *GetStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusResponse.ProtoReflect.Descriptor instead.
func (*GetStatusResponse) Descriptor() ([]byte, []int) {
	return file_gaia_proto_rawDescGZIP(), []int{8}
}

func (x *GetStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type StopRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopRequest) Reset() {
	*x = StopRequest{}
	mi := &file_gaia_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRequest) ProtoMessage() {}

func (x *StopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRequest.ProtoReflect.Descriptor instead.
func (*StopRequest) Descriptor() ([]byte, []int) {
	return file_gaia_proto_rawDescGZIP(), []int{9}
}

type StopResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopResponse) Reset() {
	*x = StopResponse{}
	mi := &file_gaia_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopResponse) ProtoMessage() {}

func (x *StopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopResponse.ProtoReflect.Descriptor instead.
func (*StopResponse) Descriptor() ([]byte, []int) {
	return file_gaia_proto_rawDescGZIP(), []int{10}
}

func (x *StopResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type UnlockRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Passphrase    string                 `protobuf:"bytes,1,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlockRequest) Reset() {
	*x = UnlockRequest{}
	mi := &file_gaia_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockRequest) ProtoMessage() {}

func (x *UnlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockRequest.ProtoReflect.Descriptor instead.
func (*UnlockRequest) Descriptor() ([]byte, []int) {
	return file_gaia_proto_rawDescGZIP(), []int{11}
}

func (x *UnlockRequest) GetPassphrase() string {
	if x != nil {
		return x.Passphrase
	}
	return ""
}

type UnlockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlockResponse) Reset() {
	*x = UnlockResponse{}
	mi := &file_gaia_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockResponse) ProtoMessage() {}

func (x *UnlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockResponse.ProtoReflect.Descriptor instead.
func (*UnlockResponse) Descriptor() ([]byte, []int) {
	return file_gaia_proto_rawDescGZIP(), []int{12}
}

func (x *UnlockResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type LockRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LockRequest) Reset() {
	*x = LockRequest{}
	mi := &file_gaia_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockRequest) ProtoMessage() {}

func (x *LockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockRequest.ProtoReflect.Descriptor instead.
func (*LockRequest) Descriptor() ([]byte, []int) {
	return file_gaia_proto_rawDescGZIP(), []int{13}
}

type LockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LockResponse) Reset() {
	*x = LockResponse{}
	mi := &file_gaia_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockResponse) ProtoMessage() {}

func (x *LockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockResponse.ProtoReflect.Descriptor instead.
func (*LockResponse) Descriptor() ([]byte, []int) {
	return file_gaia_proto_rawDescGZIP(), []int{14}
}

func (x *LockResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type RegisterClientRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientName    string                 `protobuf:"bytes,1,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterClientRequest) Reset() {
	*x = RegisterClientRequest{}
	mi := &file_gaia_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterClientRequest) ProtoMessage() {}

func (x *RegisterClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterClientRequest.ProtoReflect.Descriptor instead.
func (*RegisterClientRequest) Descriptor() ([]byte, []int) {
	return file_gaia_proto_rawDescGZIP(), []int{15}
}

func (x *RegisterClientRequest) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

type RegisterClientResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Certificate   string                 `protobuf:"bytes,1,opt,name=certificate,proto3" json:"certificate,omitempty"`                 // PEM-encoded cert
	PrivateKey    string                 `protobuf:"bytes,2,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"` // PEM-encoded key
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterClientResponse) Reset() {
	*x = RegisterClientResponse{}
	mi := &file_gaia_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterClientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterClientResponse) ProtoMessage() {}

func (x *RegisterClientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterClientResponse.ProtoReflect.Descriptor instead.
func (*RegisterClientResponse) Descriptor() ([]byte, []int) {
	return file_gaia_proto_rawDescGZIP(), []int{16}
}

func (x *RegisterClientResponse) GetCertificate() string {
	if x != nil {
		return x.Certificate
	}
	return ""
}

func (x *RegisterClientResponse) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

type ListClientsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClientsRequest) Reset() {
	*x = ListClientsRequest{}
	mi := &file_gaia_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClientsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClientsRequest) ProtoMessage() {}

func (x *ListClientsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClientsRequest.ProtoReflect.Descriptor instead.
func (*ListClientsRequest) Descriptor() ([]byte, []int) {
	return file_gaia_proto_rawDescGZIP(), []int{17}
}

type ListClientsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientNames   []string               `protobuf:"bytes,1,rep,name=client_names,json=clientNames,proto3" json:"client_names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClientsResponse) Reset() {
	*x = ListClientsResponse{}
	mi := &file_gaia_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClientsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClientsResponse) ProtoMessage() {}

func (x *ListClientsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClientsResponse.ProtoReflect.Descriptor instead.
func (*ListClientsResponse) Descriptor() ([]byte, []int) {
	return file_gaia_proto_rawDescGZIP(), []int{18}
}

func (x *ListClientsResponse) GetClientNames() []string {
	if x != nil {
		return x.ClientNames
	}
	return nil
}

type ListNamespacesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientName    string                 `protobuf:"bytes,1,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNamespacesRequest) Reset() {
	*x = ListNamespacesRequest{}
	mi := &file_gaia_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNamespacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespacesRequest) ProtoMessage() {}

func (x *ListNamespacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespacesRequest.ProtoReflect.Descriptor instead.
func (*ListNamespacesRequest) Descriptor() ([]byte, []int) {
	return file_gaia_proto_rawDescGZIP(), []int{19}
}

func (x *ListNamespacesRequest) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

type ListNamespacesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespaces    []string               `protobuf:"bytes,1,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNamespacesResponse) Reset() {
	*x = ListNamespacesResponse{}
	mi := &file_gaia_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNamespacesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespacesResponse) ProtoMessage() {}

func (x *ListNamespacesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespacesResponse.ProtoReflect.Descriptor instead.
func (*ListNamespacesResponse) Descriptor() ([]byte, []int) {
	return file_gaia_proto_rawDescGZIP(), []int{20}
}

func (x *ListNamespacesResponse) GetNamespaces() []string {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

type RevokeClientRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientName    string                 `protobuf:"bytes,1,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevokeClientRequest) Reset() {
	*x = RevokeClientRequest{}
	mi := &file_gaia_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeClientRequest) ProtoMessage() {}

func (x *RevokeClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeClientRequest.ProtoReflect.Descriptor instead.
func (*RevokeClientRequest) Descriptor() ([]byte, []int) {
	return file_gaia_proto_rawDescGZIP(), []int{21}
}

func (x *RevokeClientRequest) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

type RevokeClientResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevokeClientResponse) Reset() {
	*x = RevokeClientResponse{}
	mi := &file_gaia_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeClientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeClientResponse) ProtoMessage() {}

func (x *RevokeClientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeClientResponse.ProtoReflect.Descriptor instead.
func (*RevokeClientResponse) Descriptor() ([]byte, []int) {
	return file_gaia_proto_rawDescGZIP(), []int{22}
}

func (x *RevokeClientResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DeleteSecretRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientName    string                 `protobuf:"bytes,1,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Id            string                 `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSecretRequest) Reset() {
	*x = DeleteSecretRequest{}
	mi := &file_gaia_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSecretRequest) ProtoMessage() {}

func (x *DeleteSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSecretRequest.ProtoReflect.Descriptor instead.
func (*DeleteSecretRequest) Descriptor() ([]byte, []int) {
	return file_gaia_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteSecretRequest) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *DeleteSecretRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DeleteSecretRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteSecretResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSecretResponse) Reset() {
	*x = DeleteSecretResponse{}
	mi := &file_gaia_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSecretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSecretResponse) ProtoMessage() {}

func (x *DeleteSecretResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSecretResponse.ProtoReflect.Descriptor instead.
func (*DeleteSecretResponse) Descriptor() ([]byte, []int) {
	return file_gaia_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteSecretResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ImportSecretsConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Overwrite     bool                   `protobuf:"varint,1,opt,name=overwrite,proto3" json:"overwrite,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportSecretsConfig) Reset() {
	*x = ImportSecretsConfig{}
	mi := &file_gaia_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportSecretsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportSecretsConfig) ProtoMessage() {}

func (x *ImportSecretsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportSecretsConfig.ProtoReflect.Descriptor instead.
func (*ImportSecretsConfig) Descriptor() ([]byte, []int) {
	return file_gaia_proto_rawDescGZIP(), []int{25}
}

func (x *ImportSecretsConfig) GetOverwrite() bool {
	if x != nil {
		return x.Overwrite
	}
	return false
}

type ImportSecretItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientName    string                 `protobuf:"bytes,1,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Id            string                 `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Value         string                 `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportSecretItem) Reset() {
	*x = ImportSecretItem{}
	mi := &file_gaia_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportSecretItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportSecretItem) ProtoMessage() {}

func (x *ImportSecretItem) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportSecretItem.ProtoReflect.Descriptor instead.
func (*ImportSecretItem) Descriptor() ([]byte, []int) {
	return file_gaia_proto_rawDescGZIP(), []int{26}
}

func (x *ImportSecretItem) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *ImportSecretItem) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ImportSecretItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ImportSecretItem) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Wrapper message for the stream to handle config and items
type ImportSecretsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*ImportSecretsRequest_Config
	//	*ImportSecretsRequest_Item
	Payload       isImportSecretsRequest_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportSecretsRequest) Reset() {
	*x = ImportSecretsRequest{}
	mi := &file_gaia_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportSecretsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportSecretsRequest) ProtoMessage() {}

func (x *ImportSecretsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportSecretsRequest.ProtoReflect.Descriptor instead.
func (*ImportSecretsRequest) Descriptor() ([]byte, []int) {
	return file_gaia_proto_rawDescGZIP(), []int{27}
}

func (x *ImportSecretsRequest) GetPayload() isImportSecretsRequest_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ImportSecretsRequest) GetConfig() *ImportSecretsConfig {
	if x != nil {
		if x, ok := x.Payload.(*ImportSecretsRequest_Config); ok {
			return x.Config
		}
	}
	return nil
}

func (x *ImportSecretsRequest) GetItem() *ImportSecretItem {
	if x != nil {
		if x, ok := x.Payload.(*ImportSecretsRequest_Item); ok {
			return x.Item
		}
	}
	return nil
}

type isImportSecretsRequest_Payload interface {
	isImportSecretsRequest_Payload()
}

type ImportSecretsRequest_Config struct {
	Config *ImportSecretsConfig `protobuf:"bytes,1,opt,name=config,proto3,oneof"`
}

type ImportSecretsRequest_Item struct {
	Item *ImportSecretItem `protobuf:"bytes,2,opt,name=item,proto3,oneof"`
}

func (*ImportSecretsRequest_Config) isImportSecretsRequest_Payload() {}

func (*ImportSecretsRequest_Item) isImportSecretsRequest_Payload() {}

type ImportSecretsResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SecretsImported int32                  `protobuf:"varint,1,opt,name=secrets_imported,json=secretsImported,proto3" json:"secrets_imported,omitempty"`
	Message         string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ImportSecretsResponse) Reset() {
	*x = ImportSecretsResponse{}
	mi := &file_gaia_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportSecretsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportSecretsResponse) ProtoMessage() {}

func (x *ImportSecretsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportSecretsResponse.ProtoReflect.Descriptor instead.
func (*ImportSecretsResponse) Descriptor() ([]byte, []int) {
	return file_gaia_proto_rawDescGZIP(), []int{28}
}

func (x *ImportSecretsResponse) GetSecretsImported() int32 {
	if x != nil {
		return x.SecretsImported
	}
	return 0
}

func (x *ImportSecretsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListSecretsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespaces    []*Namespace           `protobuf:"bytes,1,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSecretsResponse) Reset() {
	*x = ListSecretsResponse{}
	mi := &file_gaia_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSecretsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSecretsResponse) ProtoMessage() {}

func (x *ListSecretsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSecretsResponse.ProtoReflect.Descriptor instead.
func (*ListSecretsResponse) Descriptor() ([]byte, []int) {
	return file_gaia_proto_rawDescGZIP(), []int{29}
}

func (x *ListSecretsResponse) GetNamespaces() []*Namespace {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

type ListSecretsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientName    string                 `protobuf:"bytes,1,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSecretsRequest) Reset() {
	*x = ListSecretsRequest{}
	mi := &file_gaia_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSecretsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSecretsRequest) ProtoMessage() {}

func (x *ListSecretsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSecretsRequest.ProtoReflect.Descriptor instead.
func (*ListSecretsRequest) Descriptor() ([]byte, []int) {
	return file_gaia_proto_rawDescGZIP(), []int{30}
}

func (x *ListSecretsRequest) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

var File_gaia_proto protoreflect.FileDescriptor

const file_gaia_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"gaia.proto\x12\x04gaia\".\n" +
	"\x06Secret\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"G\n" +
	"\tNamespace\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12&\n" +
	"\asecrets\x18\x02 \x03(\v2\f.gaia.SecretR\asecrets\"w\n" +
	"\x10AddSecretRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x14\n" +
	"\x05value\x18\x03 \x01(\tR\x05value\x12\x1f\n" +
	"\vclient_name\x18\x04 \x01(\tR\n" +
	"clientName\"G\n" +
	"\x11AddSecretResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\",\n" +
	"\x11RevokeCertRequest\x12\x17\n" +
	"\acert_id\x18\x01 \x01(\tR\x06certId\".\n" +
	"\x12RevokeCertResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"@\n" +
	"\x10GetSecretRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"\x12\n" +
	"\x10GetStatusRequest\"+\n" +
	"\x11GetStatusResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\"\r\n" +
	"\vStopRequest\"(\n" +
	"\fStopResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"/\n" +
	"\rUnlockRequest\x12\x1e\n" +
	"\n" +
	"passphrase\x18\x01 \x01(\tR\n" +
	"passphrase\"*\n" +
	"\x0eUnlockResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\r\n" +
	"\vLockRequest\"(\n" +
	"\fLockResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"8\n" +
	"\x15RegisterClientRequest\x12\x1f\n" +
	"\vclient_name\x18\x01 \x01(\tR\n" +
	"clientName\"[\n" +
	"\x16RegisterClientResponse\x12 \n" +
	"\vcertificate\x18\x01 \x01(\tR\vcertificate\x12\x1f\n" +
	"\vprivate_key\x18\x02 \x01(\tR\n" +
	"privateKey\"\x14\n" +
	"\x12ListClientsRequest\"8\n" +
	"\x13ListClientsResponse\x12!\n" +
	"\fclient_names\x18\x01 \x03(\tR\vclientNames\"8\n" +
	"\x15ListNamespacesRequest\x12\x1f\n" +
	"\vclient_name\x18\x01 \x01(\tR\n" +
	"clientName\"8\n" +
	"\x16ListNamespacesResponse\x12\x1e\n" +
	"\n" +
	"namespaces\x18\x01 \x03(\tR\n" +
	"namespaces\"6\n" +
	"\x13RevokeClientRequest\x12\x1f\n" +
	"\vclient_name\x18\x01 \x01(\tR\n" +
	"clientName\"0\n" +
	"\x14RevokeClientResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"d\n" +
	"\x13DeleteSecretRequest\x12\x1f\n" +
	"\vclient_name\x18\x01 \x01(\tR\n" +
	"clientName\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\tR\x02id\"0\n" +
	"\x14DeleteSecretResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"3\n" +
	"\x13ImportSecretsConfig\x12\x1c\n" +
	"\toverwrite\x18\x01 \x01(\bR\toverwrite\"w\n" +
	"\x10ImportSecretItem\x12\x1f\n" +
	"\vclient_name\x18\x01 \x01(\tR\n" +
	"clientName\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\tR\x02id\x12\x14\n" +
	"\x05value\x18\x04 \x01(\tR\x05value\"\x84\x01\n" +
	"\x14ImportSecretsRequest\x123\n" +
	"\x06config\x18\x01 \x01(\v2\x19.gaia.ImportSecretsConfigH\x00R\x06config\x12,\n" +
	"\x04item\x18\x02 \x01(\v2\x16.gaia.ImportSecretItemH\x00R\x04itemB\t\n" +
	"\apayload\"\\\n" +
	"\x15ImportSecretsResponse\x12)\n" +
	"\x10secrets_imported\x18\x01 \x01(\x05R\x0fsecretsImported\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"F\n" +
	"\x13ListSecretsResponse\x12/\n" +
	"\n" +
	"namespaces\x18\x01 \x03(\v2\x0f.gaia.NamespaceR\n" +
	"namespaces\"5\n" +
	"\x12ListSecretsRequest\x12\x1f\n" +
	"\vclient_name\x18\x01 \x01(\tR\n" +
	"clientName2\xd7\x06\n" +
	"\tGaiaAdmin\x12<\n" +
	"\tAddSecret\x12\x16.gaia.AddSecretRequest\x1a\x17.gaia.AddSecretResponse\x12E\n" +
	"\fDeleteSecret\x12\x19.gaia.DeleteSecretRequest\x1a\x1a.gaia.DeleteSecretResponse\x12B\n" +
	"\vListSecrets\x12\x18.gaia.ListSecretsRequest\x1a\x19.gaia.ListSecretsResponse\x12?\n" +
	"\n" +
	"RevokeCert\x12\x17.gaia.RevokeCertRequest\x1a\x18.gaia.RevokeCertResponse\x12<\n" +
	"\tGetStatus\x12\x16.gaia.GetStatusRequest\x1a\x17.gaia.GetStatusResponse\x12-\n" +
	"\x04Stop\x12\x11.gaia.StopRequest\x1a\x12.gaia.StopResponse\x123\n" +
	"\x06Unlock\x12\x13.gaia.UnlockRequest\x1a\x14.gaia.UnlockResponse\x12-\n" +
	"\x04Lock\x12\x11.gaia.LockRequest\x1a\x12.gaia.LockResponse\x12K\n" +
	"\x0eRegisterClient\x12\x1b.gaia.RegisterClientRequest\x1a\x1c.gaia.RegisterClientResponse\x12B\n" +
	"\vListClients\x12\x18.gaia.ListClientsRequest\x1a\x19.gaia.ListClientsResponse\x12K\n" +
	"\x0eListNamespaces\x12\x1b.gaia.ListNamespacesRequest\x1a\x1c.gaia.ListNamespacesResponse\x12E\n" +
	"\fRevokeClient\x12\x19.gaia.RevokeClientRequest\x1a\x1a.gaia.RevokeClientResponse\x12J\n" +
	"\rImportSecrets\x12\x1a.gaia.ImportSecretsRequest\x1a\x1b.gaia.ImportSecretsResponse(\x012?\n" +
	"\n" +
	"GaiaClient\x121\n" +
	"\tGetSecret\x12\x16.gaia.GetSecretRequest\x1a\f.gaia.SecretB+Z)github.com/stain-win/gaia/apps/gaia/protob\x06proto3"

var (
	file_gaia_proto_rawDescOnce sync.Once
	file_gaia_proto_rawDescData []byte
)

func file_gaia_proto_rawDescGZIP() []byte {
	file_gaia_proto_rawDescOnce.Do(func() {
		file_gaia_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_gaia_proto_rawDesc), len(file_gaia_proto_rawDesc)))
	})
	return file_gaia_proto_rawDescData
}

var file_gaia_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_gaia_proto_goTypes = []any{
	(*Secret)(nil),                 // 0: gaia.Secret
	(*Namespace)(nil),              // 1: gaia.Namespace
	(*AddSecretRequest)(nil),       // 2: gaia.AddSecretRequest
	(*AddSecretResponse)(nil),      // 3: gaia.AddSecretResponse
	(*RevokeCertRequest)(nil),      // 4: gaia.RevokeCertRequest
	(*RevokeCertResponse)(nil),     // 5: gaia.RevokeCertResponse
	(*GetSecretRequest)(nil),       // 6: gaia.GetSecretRequest
	(*GetStatusRequest)(nil),       // 7: gaia.GetStatusRequest
	(*GetStatusResponse)(nil),      // 8: gaia.GetStatusResponse
	(*StopRequest)(nil),            // 9: gaia.StopRequest
	(*StopResponse)(nil),           // 10: gaia.StopResponse
	(*UnlockRequest)(nil),          // 11: gaia.UnlockRequest
	(*UnlockResponse)(nil),         // 12: gaia.UnlockResponse
	(*LockRequest)(nil),            // 13: gaia.LockRequest
	(*LockResponse)(nil),           // 14: gaia.LockResponse
	(*RegisterClientRequest)(nil),  // 15: gaia.RegisterClientRequest
	(*RegisterClientResponse)(nil), // 16: gaia.RegisterClientResponse
	(*ListClientsRequest)(nil),     // 17: gaia.ListClientsRequest
	(*ListClientsResponse)(nil),    // 18: gaia.ListClientsResponse
	(*ListNamespacesRequest)(nil),  // 19: gaia.ListNamespacesRequest
	(*ListNamespacesResponse)(nil), // 20: gaia.ListNamespacesResponse
	(*RevokeClientRequest)(nil),    // 21: gaia.RevokeClientRequest
	(*RevokeClientResponse)(nil),   // 22: gaia.RevokeClientResponse
	(*DeleteSecretRequest)(nil),    // 23: gaia.DeleteSecretRequest
	(*DeleteSecretResponse)(nil),   // 24: gaia.DeleteSecretResponse
	(*ImportSecretsConfig)(nil),    // 25: gaia.ImportSecretsConfig
	(*ImportSecretItem)(nil),       // 26: gaia.ImportSecretItem
	(*ImportSecretsRequest)(nil),   // 27: gaia.ImportSecretsRequest
	(*ImportSecretsResponse)(nil),  // 28: gaia.ImportSecretsResponse
	(*ListSecretsResponse)(nil),    // 29: gaia.ListSecretsResponse
	(*ListSecretsRequest)(nil),     // 30: gaia.ListSecretsRequest
}
var file_gaia_proto_depIdxs = []int32{
	0,  // 0: gaia.Namespace.secrets:type_name -> gaia.Secret
	25, // 1: gaia.ImportSecretsRequest.config:type_name -> gaia.ImportSecretsConfig
	26, // 2: gaia.ImportSecretsRequest.item:type_name -> gaia.ImportSecretItem
	1,  // 3: gaia.ListSecretsResponse.namespaces:type_name -> gaia.Namespace
	2,  // 4: gaia.GaiaAdmin.AddSecret:input_type -> gaia.AddSecretRequest
	23, // 5: gaia.GaiaAdmin.DeleteSecret:input_type -> gaia.DeleteSecretRequest
	30, // 6: gaia.GaiaAdmin.ListSecrets:input_type -> gaia.ListSecretsRequest
	4,  // 7: gaia.GaiaAdmin.RevokeCert:input_type -> gaia.RevokeCertRequest
	7,  // 8: gaia.GaiaAdmin.GetStatus:input_type -> gaia.GetStatusRequest
	9,  // 9: gaia.GaiaAdmin.Stop:input_type -> gaia.StopRequest
	11, // 10: gaia.GaiaAdmin.Unlock:input_type -> gaia.UnlockRequest
	13, // 11: gaia.GaiaAdmin.Lock:input_type -> gaia.LockRequest
	15, // 12: gaia.GaiaAdmin.RegisterClient:input_type -> gaia.RegisterClientRequest
	17, // 13: gaia.GaiaAdmin.ListClients:input_type -> gaia.ListClientsRequest
	19, // 14: gaia.GaiaAdmin.ListNamespaces:input_type -> gaia.ListNamespacesRequest
	21, // 15: gaia.GaiaAdmin.RevokeClient:input_type -> gaia.RevokeClientRequest
	27, // 16: gaia.GaiaAdmin.ImportSecrets:input_type -> gaia.ImportSecretsRequest
	6,  // 17: gaia.GaiaClient.GetSecret:input_type -> gaia.GetSecretRequest
	3,  // 18: gaia.GaiaAdmin.AddSecret:output_type -> gaia.AddSecretResponse
	24, // 19: gaia.GaiaAdmin.DeleteSecret:output_type -> gaia.DeleteSecretResponse
	29, // 20: gaia.GaiaAdmin.ListSecrets:output_type -> gaia.ListSecretsResponse
	5,  // 21: gaia.GaiaAdmin.RevokeCert:output_type -> gaia.RevokeCertResponse
	8,  // 22: gaia.GaiaAdmin.GetStatus:output_type -> gaia.GetStatusResponse
	10, // 23: gaia.GaiaAdmin.Stop:output_type -> gaia.StopResponse
	12, // 24: gaia.GaiaAdmin.Unlock:output_type -> gaia.UnlockResponse
	14, // 25: gaia.GaiaAdmin.Lock:output_type -> gaia.LockResponse
	16, // 26: gaia.GaiaAdmin.RegisterClient:output_type -> gaia.RegisterClientResponse
	18, // 27: gaia.GaiaAdmin.ListClients:output_type -> gaia.ListClientsResponse
	20, // 28: gaia.GaiaAdmin.ListNamespaces:output_type -> gaia.ListNamespacesResponse
	22, // 29: gaia.GaiaAdmin.RevokeClient:output_type -> gaia.RevokeClientResponse
	28, // 30: gaia.GaiaAdmin.ImportSecrets:output_type -> gaia.ImportSecretsResponse
	0,  // 31: gaia.GaiaClient.GetSecret:output_type -> gaia.Secret
	18, // [18:32] is the sub-list for method output_type
	4,  // [4:18] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_gaia_proto_init() }
func file_gaia_proto_init() {
	if File_gaia_proto != nil {
		return
	}
	file_gaia_proto_msgTypes[27].OneofWrappers = []any{
		(*ImportSecretsRequest_Config)(nil),
		(*ImportSecretsRequest_Item)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gaia_proto_rawDesc), len(file_gaia_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_gaia_proto_goTypes,
		DependencyIndexes: file_gaia_proto_depIdxs,
		MessageInfos:      file_gaia_proto_msgTypes,
	}.Build()
	File_gaia_proto = out.File
	file_gaia_proto_goTypes = nil
	file_gaia_proto_depIdxs = nil
}
